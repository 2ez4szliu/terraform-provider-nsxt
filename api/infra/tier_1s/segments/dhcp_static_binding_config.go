//nolint:revive
package segments

// The following file has been autogenerated. Please avoid any changes!
import (
	"errors"

	model0 "github.com/vmware/vsphere-automation-sdk-go/runtime/data"
	vapiProtocolClient_ "github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/client"
	client0 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/infra/tier_1s/segments"
	lrmodel0 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/model"

	utl "github.com/vmware/terraform-provider-nsxt/api/utl"
)

type StructValueClientContext utl.ClientContext

func NewDhcpStaticBindingConfigsClient(sessionContext utl.SessionContext, connector vapiProtocolClient_.Connector) *StructValueClientContext {
	var client interface{}

	switch sessionContext.ClientType {

	case utl.Local:
		client = client0.NewDhcpStaticBindingConfigsClient(connector)

	default:
		return nil
	}
	return &StructValueClientContext{Client: client, ClientType: sessionContext.ClientType, ProjectID: sessionContext.ProjectID}
}

func (c StructValueClientContext) Get(tier1IdParam string, segmentIdParam string, bindingIdParam string) (*model0.StructValue, error) {
	var obj *model0.StructValue
	var err error

	switch c.ClientType {

	case utl.Local:
		client := c.Client.(client0.DhcpStaticBindingConfigsClient)
		obj, err = client.Get(tier1IdParam, segmentIdParam, bindingIdParam)
		if err != nil {
			return obj, err
		}

	default:
		return obj, errors.New("invalid infrastructure for model")
	}
	return obj, err
}

func (c StructValueClientContext) Delete(tier1IdParam string, segmentIdParam string, bindingIdParam string) error {
	var err error

	switch c.ClientType {

	case utl.Local:
		client := c.Client.(client0.DhcpStaticBindingConfigsClient)
		err = client.Delete(tier1IdParam, segmentIdParam, bindingIdParam)

	default:
		err = errors.New("invalid infrastructure for model")
	}
	return err
}

func (c StructValueClientContext) Patch(tier1IdParam string, segmentIdParam string, bindingIdParam string, dhcpStaticBindingConfigParam *model0.StructValue) error {
	var err error

	switch c.ClientType {

	case utl.Local:
		client := c.Client.(client0.DhcpStaticBindingConfigsClient)
		err = client.Patch(tier1IdParam, segmentIdParam, bindingIdParam, dhcpStaticBindingConfigParam)

	default:
		err = errors.New("invalid infrastructure for model")
	}
	return err
}

func (c StructValueClientContext) Update(tier1IdParam string, segmentIdParam string, bindingIdParam string, dhcpStaticBindingConfigParam *model0.StructValue) (*model0.StructValue, error) {
	var err error
	var obj *model0.StructValue

	switch c.ClientType {

	case utl.Local:
		client := c.Client.(client0.DhcpStaticBindingConfigsClient)
		obj, err = client.Update(tier1IdParam, segmentIdParam, bindingIdParam, dhcpStaticBindingConfigParam)

	default:
		err = errors.New("invalid infrastructure for model")
	}
	return obj, err
}

func (c StructValueClientContext) List(tier1IdParam string, segmentIdParam string, cursorParam *string, includeMarkForDeleteObjectsParam *bool, includedFieldsParam *string, pageSizeParam *int64, sortAscendingParam *bool, sortByParam *string) (lrmodel0.DhcpStaticBindingConfigListResult, error) {
	var err error
	var obj lrmodel0.DhcpStaticBindingConfigListResult

	switch c.ClientType {

	case utl.Local:
		client := c.Client.(client0.DhcpStaticBindingConfigsClient)
		obj, err = client.List(tier1IdParam, segmentIdParam, cursorParam, includeMarkForDeleteObjectsParam, includedFieldsParam, pageSizeParam, sortAscendingParam, sortByParam)

	default:
		err = errors.New("invalid infrastructure for model")
	}
	return obj, err
}
